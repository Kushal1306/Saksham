name: Build and deploy Node.js app to Azure Web App - saksham

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install dependencies, build, and test
        run: |
          cd backend  # Navigate to the backend folder
          npm install
          # npm run build --if-present
          # npm run test --if-present

      - name: Zip backend artifact for deployment
        run: |
          cd backend  # Navigate to the backend folder
          zip -r ../release.zip .  # Zip only the backend folder contents

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-backend  
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write  

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-backend 

      - name: List files after unzip
        run: ls -R  # List the files to verify backend folder structure

      - name: Unzip artifact for deployment
        run: unzip release.zip -d backend

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_6470AACBBC73490CB412A13FAE7326CC }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_AA28E43CA7FA40D7B0CD97544E497CE6 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_6927BF36C7254037B7A859C445A47F22 }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'saksham'
          slot-name: 'staging'
          package: ./backend # Use this if backend is in the unzipped folder's root
